// /* Global variables. */
// :root {
//   /* Set sans-serif & mono fonts */
//

//   /* Default (light) theme */
//   --bg: #fff;
//   --accent-bg: #f5f7ff;
//   --text: #212121;
//   --text-light: #585858;
//   --border: #898ea4;
//   --accent: #ff8c42;
//   --accent-hover: #1266e2;
//   --accent-text: var(--bg);
//   --code: #d81b60;
//   --preformatted: #444;
//   --marked: #ffdd33;
//   --disabled: #efefef;
// }

:root {
  --sans-font: -apple-system, BlinkMacSystemFont, "Avenir Next", Avenir,
    "Nimbus Sans L", Roboto, "Noto Sans", "Segoe UI", Arial, Helvetica,
    "Helvetica Neue", sans-serif;
  --mono-font: Consolas, Menlo, Monaco, "Andale Mono", "Ubuntu Mono", monospace;
  --standard-border-radius: 5px;
  --height-header: 56px;
  --padding-x: 32px;

  --primary: #06b6d4;
  --primary-light: #67e8f9;
  --primary-dark: #0891b2;

  --secondary: #64748b;

  --tertiary: #9ea2a9;
  --text-tertiary: #818588;
  --text-secondary: #737982;

  --neutral: #c9cccf;

  --red-60: #ffebeb;

  --alert: #cc0000;
  --semantic-alert: #ff1f1f;
  --text-success: #188b54;

  --text-heading: #0f172a;
  --text-body: #334155;

  --text-primary: #3a3d41;
  --border-color: #dfe0e2;
  --button-Tertiary-default: #d9e1e8;

  --hover-btn: var(--blue-600);
  --disable-btn: var(--grey-neutral-80);

  --border-color: #cedfdf;
  --bg: #ffffff;
  --divider-color: #e6efef;

  --white: #ffffff;
  --black: #000000;

  --grey-neutral-900: #26282b;
  --grey-neutral-800: #3a3d41;
  --grey-neutral-700: #4d5156;
  --grey-neutral-600: #60656c;
  --grey-neutral-500: #737982;
  --grey-neutral-400: #888e96;
  --grey-neutral-300: #9ea2a9;
  --grey-neutral-200: #b3b7bc;
  --grey-neutral-100: #c9cccf;
  --grey-neutral-80: #dfe0e2;
  --grey-neutral-60: #f4f5f5;
  --grey-neutral-40: #f4f5f5;

  --grey-primary-900: #1f2933;
  --grey-primary-800: #2f3e4c;
  --grey-primary-700: #3e5265;
  --grey-primary-600: #4e677e;
  --grey-primary-500: #5d7b98;
  --grey-primary-400: #7490aa;
  --grey-primary-300: #8da4b9;
  --grey-primary-200: #a6b8c9;
  --grey-primary-100: #c0ccd8;
  --grey-primary-80: #d9e1e8;
  --grey-primary-60: #f2f5f7;
  --grey-primary-40: #f2f5f7;

  --turquoise-900: #140052;
  --turquoise-800: #1f007a;
  --turquoise-700: #2900a3;
  --turquoise-600: #3300cc;
  --turquoise-500: #3d00f5;
  --turquoise-400: #571fff;
  --turquoise-300: #7547ff;
  --turquoise-200: #9470ff;
  --turquoise-100: #b399ff;
  --turquoise-80: #d1c2ff;
  --turquoise-60: #f0ebff;

  --blue-900: #002a52;
  --blue-800: #003f7a;
  --blue-700: #0054a3;
  --blue-600: #0069cc;
  --blue-500: #007ef5;
  --blue-400: #1f93ff;
  --blue-300: #47a7ff;
  --blue-200: #70baff;
  --blue-100: #99ceff;
  --blue-80: #c2e1ff;
  --blue-60: #ebf5ff;

  --green-900: #0c452a;
  --green-800: #12683f;
  --green-700: #188b54;
  --green-600: #1fad68;
  --green-500: #25d07e;
  --green-400: #40dd91;
  --green-300: #63e3a5;
  --green-200: #86eab9;
  --green-100: #a8f0cd;
  --green-80: #cbf6e1;
  --green-60: #eefcf5;

  --red-900: #660000;
  --red-800: #8f0000;
  --red-700: #b80000;
  --red-600: #cc0000;
  --red-500: #f50000;
  --red-400: #ff1f1f;
  --red-300: #ff4747;
  --red-200: #ff7070;
  --red-100: #ff9999;
  --red-80: #ffc2c2;
  --red-60: #ffebeb;

  --yellow-900: #524000;
  --yellow-800: #7a6000;
  --yellow-700: #a38000;
  --yellow-600: #cca000;
  --yellow-500: #f5c000;
  --yellow-400: #ffce1f;
  --yellow-300: #ffd747;
  --yellow-200: #ffe070;
  --yellow-100: #ffe999;
  --yellow-80: #fff2c2;
  --yellow-60: #fffbeb;

  --orange-900: #522600;
  --orange-800: #7a3900;
  --orange-700: #a34c00;
  --orange-600: #cc5f00;
  --orange-500: #f57200;
  --orange-400: #ff871f;
  --orange-300: #ff9d47;
  --orange-200: #ffb370;
  --orange-100: #ffc999;
  --orange-80: #ffdec2;
  --orange-60: #fff4eb;

  --teal-900: #003d40; /* Darkest teal - almost black-teal */
  --teal-800: #004f52; /* Very dark teal */
  --teal-700: #006266; /* Dark teal */
  --teal-600: #007579; /* Medium-dark teal */
  --teal-500: #06b6d4; /* Primary teal */
  --teal-400: #22d3f1; /* Bright teal */
  --teal-300: #67e8f9; /* Light teal */
  --teal-200: #a5f3fc; /* Lighter teal */
  --teal-100: #cffafe; /* Very light teal */
  --teal-80: #e0fbfc; /* Extra light teal */
  --teal-60: #f0fdff; /* Almost white teal */

  --indigo-900: #1e1b4b; /* Darkest indigo - almost black-indigo */
  --indigo-800: #2e2a5f; /* Very dark indigo */
  --indigo-700: #3730a3; /* Dark indigo */
  --indigo-600: #4338ca; /* Medium-dark indigo */
  --indigo-500: #4f46e5; /* Primary indigo */
  --indigo-400: #6366f1; /* Bright indigo */
  --indigo-300: #818cf8; /* Light indigo */
  --indigo-200: #a5b4fc; /* Lighter indigo */
  --indigo-100: #c7d2fe; /* Very light indigo */
  --indigo-80: #e0e7ff; /* Extra light indigo */
  --indigo-60: #eef2ff; /* Almost white indigo */
}

/* Reset box-sizing */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reset default appearance */
textarea,
select,
input,
progress {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}

html {
  /* Set the font globally */
  font-family: var(--sans-font);
  scroll-behavior: smooth;
}

/* Make the body a nice central block */
body {
  color: var(--text);
  background-color: var(--bg);
  font-size: 1.15rem;
  line-height: 1.5;
  display: grid;
  grid-template-columns: 1fr min(100vw, 85%) 1fr;
  margin: 0;

  ul {
    list-style-type: none;
    padding: 0;
    margin: 10;
    display: flex;
    justify-content: space-between;
  }

  a {
    text-decoration: none;
  }
}
body > * {
  grid-column: 2;
}

/* Make the header bg full width, but the content inline with body */
body > header {
  background-color: var(--accent-bg);
  border-bottom: 1px solid var(--border);
  text-align: center;
  padding: 0 0.5rem 2rem 0.5rem;
  grid-column: 1 / -1;
}

body > header > *:only-child {
  margin-block-start: 2rem;
}

body > header h1 {
  max-width: 1200px;
  margin: 1rem auto;
}

body > header p {
  max-width: 40rem;
  margin: 1rem auto;
}

/* Add a little padding to ensure spacing is correct between content and header > nav */

body > footer {
  margin-top: 4rem;
  padding: 2rem 1rem 1.5rem 1rem;
  color: var(--text-light);
  font-size: 0.9rem;
  text-align: center;
  border-top: 1px solid var(--border);
}

// /* Format headers */
// h1 {
//   font-size: 3rem;
// }

// h2 {
//   font-size: 2.6rem;
//   margin-top: 3rem;
// }

// h3 {
//   font-size: 2rem;
//   margin-top: 3rem;
// }

// h4 {
//   font-size: 1.44rem;
// }

// h5 {
//   font-size: 1.15rem;
// }

// h6 {
//   font-size: 0.96rem;
// }

// p {
//   margin: 1.5rem 0;
// }

/* Prevent long strings from overflowing container */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* Fix line height when title wraps */
h1,
h2,
h3 {
  line-height: 1.1;
}

/* Reduce header size on mobile */
@media only screen and (max-width: 720px) {
  h1 {
    font-size: 2.5rem;
  }

  h2 {
    font-size: 2.1rem;
  }

  h3 {
    font-size: 1.75rem;
  }

  h4 {
    font-size: 1.25rem;
  }
}

/* Format links & buttons */
a,
a:visited {
  color: var(--accent);
}

a:hover {
  text-decoration: none;
}

button,
.button,
a.button, /* extra specificity to override a */
input[type="submit"],
input[type="reset"],
input[type="button"] {
  border: 1px solid var(--accent);
  background-color: var(--accent);
  color: var(--accent-text);
  padding: 0.5rem 0.9rem;
  text-decoration: none;
  line-height: normal;
}

.button[aria-disabled="true"],
input:disabled,
textarea:disabled,
select:disabled,
button[disabled] {
  cursor: not-allowed;
  background-color: var(--disabled);
  border-color: var(--disabled);
  color: var(--text-light);
}

input[type="range"] {
  padding: 0;
}

/* Set the cursor to '?' on an abbreviation and style the abbreviation to show that there is more information underneath */
abbr[title] {
  cursor: help;
  text-decoration-line: underline;
  text-decoration-style: dotted;
}

button:enabled:hover,
.button:not([aria-disabled="true"]):hover,
input[type="submit"]:enabled:hover,
input[type="reset"]:enabled:hover,
input[type="button"]:enabled:hover {
  background-color: var(--accent-hover);
  border-color: var(--accent-hover);
  cursor: pointer;
}

.button:focus-visible,
button:focus-visible:where(:enabled),
input:enabled:focus-visible:where(
    [type="submit"],
    [type="reset"],
    [type="button"]
  ) {
  outline: 2px solid var(--accent);
  outline-offset: 1px;
}

/* Format navigation */
header > nav {
  font-size: 1rem;
  line-height: 2;
  padding: 1rem 0 0 0;
}

/* Use flexbox to allow items to wrap, as needed */
header > nav ul,
header > nav ol {
  align-content: space-around;
  align-items: center;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  list-style-type: none;
  margin: 0;
  padding: 0;
}

/* List items are inline elements, make them behave more like blocks */
header > nav ul li,
header > nav ol li {
  display: inline-block;
}

header > nav a,
header > nav a:visited {
  margin: 0 0.5rem 1rem 0.5rem;
  border: 1px solid var(--border);
  border-radius: var(--standard-border-radius);
  color: var(--text);
  display: inline-block;
  padding: 0.1rem 1rem;
  text-decoration: none;
}

header > nav a:hover,
header > nav a.current,
header > nav a[aria-current="page"],
header > nav a[aria-current="true"] {
  border-color: var(--accent);
  color: var(--accent);
  cursor: pointer;
}

/* Reduce nav side on mobile */
@media only screen and (max-width: 720px) {
  header > nav a {
    border: none;
    padding: 0;
    text-decoration: underline;
    line-height: 1;
  }
}

/* Consolidate box styling */
aside,
details,
pre,
progress {
  background-color: var(--accent-bg);
  border: 1px solid var(--border);
  border-radius: var(--standard-border-radius);
  margin-bottom: 1rem;
}

aside {
  font-size: 1rem;
  width: 30%;
  padding: 0 15px;
  margin-inline-start: 15px;
  float: right;
}
*[dir="rtl"] aside {
  float: left;
}

/* Make aside full-width on mobile */
@media only screen and (max-width: 720px) {
  aside {
    width: 100%;
    float: none;
    margin-inline-start: 0;
  }
}

article,
fieldset,
dialog {
  border: 1px solid var(--border);
  padding: 1rem;
  border-radius: var(--standard-border-radius);
  margin-bottom: 1rem;
}

article h2:first-child,
section h2:first-child,
article h3:first-child,
section h3:first-child {
  margin-top: 1rem;
}

section {
  border-top: 1px solid var(--border);
  border-bottom: 1px solid var(--border);
  padding: 2rem 1rem;
  margin: 3rem 0;
}

/* Don't double separators when chaining sections */
section + section,
section:first-child {
  border-top: 0;
  padding-top: 0;
}

section + section {
  margin-top: 0;
}

section:last-child {
  border-bottom: 0;
  padding-bottom: 0;
}

details {
  padding: 0.7rem 1rem;
}

summary {
  cursor: pointer;
  font-weight: bold;
  padding: 0.7rem 1rem;
  margin: -0.7rem -1rem;
  word-break: break-all;
}

details[open] > summary + * {
  margin-top: 0;
}

details[open] > summary {
  margin-bottom: 0.5rem;
}

details[open] > :last-child {
  margin-bottom: 0;
}

/* Format tables */
table {
  border-collapse: collapse;
  margin: 1.5rem 0;
}

figure > table {
  width: max-content;
  margin: 0;
}

td,
th {
  border: 1px solid var(--border);
  text-align: start;
  padding: 0.5rem;
}

th {
  background-color: var(--accent-bg);
  font-weight: bold;
}

tr:nth-child(even) {
  /* Set every other cell slightly darker. Improves readability. */
  background-color: var(--accent-bg);
}

table caption {
  font-weight: bold;
  margin-bottom: 0.5rem;
}

/* Format forms */
textarea,
select,
input,
button,
.button {
  font-size: inherit;
  font-family: inherit;
  padding: 0.5rem;
  margin-bottom: 0.5rem;
  border-radius: var(--standard-border-radius);
  box-shadow: none;
  max-width: 100%;
  display: inline-block;
}
textarea,
select,
input {
  color: var(--text);
  background-color: var(--bg);
  border: 1px solid var(--border);
}
label {
  display: block;
}
textarea:not([cols]) {
  width: 100%;
}

/* Add arrow to drop-down */
select:not([multiple]) {
  background-image: linear-gradient(45deg, transparent 49%, var(--text) 51%),
    linear-gradient(135deg, var(--text) 51%, transparent 49%);
  background-position: calc(100% - 15px), calc(100% - 10px);
  background-size: 5px 5px, 5px 5px;
  background-repeat: no-repeat;
  padding-inline-end: 25px;
}
*[dir="rtl"] select:not([multiple]) {
  background-position: 10px, 15px;
}

/* checkbox and radio button style */
input[type="checkbox"],
input[type="radio"] {
  vertical-align: middle;
  position: relative;
  width: min-content;
}

input[type="checkbox"] + label,
input[type="radio"] + label {
  display: inline-block;
}

input[type="radio"] {
  border-radius: 100%;
}

input[type="checkbox"]:checked,
input[type="radio"]:checked {
  background-color: var(--accent);
}

input[type="checkbox"]:checked::after {
  /* Creates a rectangle with colored right and bottom borders which is rotated to look like a check mark */
  content: " ";
  width: 0.18em;
  height: 0.32em;
  border-radius: 0;
  position: absolute;
  top: 0.05em;
  left: 0.17em;
  background-color: transparent;
  border-right: solid var(--bg) 0.08em;
  border-bottom: solid var(--bg) 0.08em;
  font-size: 1.8em;
  transform: rotate(45deg);
}
input[type="radio"]:checked::after {
  /* creates a colored circle for the checked radio button  */
  content: " ";
  width: 0.25em;
  height: 0.25em;
  border-radius: 100%;
  position: absolute;
  top: 0.125em;
  background-color: var(--bg);
  left: 0.125em;
  font-size: 32px;
}

/* Makes input fields wider on smaller screens */
@media only screen and (max-width: 720px) {
  textarea,
  select,
  input {
    width: 100%;
  }
}

/* Set a height for color input */
input[type="color"] {
  height: 2.5rem;
  padding: 0.2rem;
}

/* do not show border around file selector button */
input[type="file"] {
  border: 0;
}

/* Misc body elements */
hr {
  border: none;
  height: 1px;
  background: var(--border);
  margin: 1rem auto;
}

mark {
  padding: 2px 5px;
  border-radius: var(--standard-border-radius);
  background-color: var(--marked);
  color: black;
}

mark a {
  color: #0d47a1;
}

img,
video {
  max-width: 100%;
  height: auto;
  border-radius: var(--standard-border-radius);
}

figure {
  margin: 0;
  display: block;
  overflow-x: auto;
}

figure > img,
figure > picture > img {
  display: block;
  margin-inline: auto;
}

figcaption {
  text-align: center;
  font-size: 0.9rem;
  color: var(--text-light);
  margin-block: 1rem;
}

blockquote {
  margin-inline-start: 2rem;
  margin-inline-end: 0;
  margin-block: 2rem;
  padding: 0.4rem 0.8rem;
  border-inline-start: 0.35rem solid var(--accent);
  color: var(--text-light);
  font-style: italic;
}

cite {
  font-size: 0.9rem;
  color: var(--text-light);
  font-style: normal;
}

dt {
  color: var(--text-light);
}

/* Use mono font for code elements */
code,
pre,
pre span,
kbd,
samp {
  font-family: var(--mono-font);
  color: var(--code);
}

kbd {
  color: var(--preformatted);
  border: 1px solid var(--preformatted);
  border-bottom: 3px solid var(--preformatted);
  border-radius: var(--standard-border-radius);
  padding: 0.1rem 0.4rem;
}

pre {
  padding: 1rem 1.4rem;
  max-width: 100%;
  overflow: auto;
  color: var(--preformatted);
}

/* Fix embedded code within pre */
pre code {
  color: var(--preformatted);
  background: none;
  margin: 0;
  padding: 0;
}

/* Progress bars */
/* Declarations are repeated because you */
/* cannot combine vendor-specific selectors */
progress {
  width: 100%;
}

progress:indeterminate {
  background-color: var(--accent-bg);
}

progress::-webkit-progress-bar {
  border-radius: var(--standard-border-radius);
  background-color: var(--accent-bg);
}

progress::-webkit-progress-value {
  border-radius: var(--standard-border-radius);
  background-color: var(--accent);
}

progress::-moz-progress-bar {
  border-radius: var(--standard-border-radius);
  background-color: var(--accent);
  transition-property: width;
  transition-duration: 0.3s;
}

progress:indeterminate::-moz-progress-bar {
  background-color: var(--accent-bg);
}

dialog {
  background-color: var(--bg);
  max-width: 40rem;
  margin: auto;
}

dialog::backdrop {
  background-color: var(--bg);
  opacity: 0.8;
}

@media only screen and (max-width: 720px) {
  dialog {
    max-width: 100%;
    margin: auto 1em;
  }
}

/* Superscript & Subscript */
/* Prevent scripts from affecting line-height. */
sup,
sub {
  vertical-align: baseline;
  position: relative;
}

sup {
  top: -0.4em;
}

sub {
  top: 0.3em;
}

/* Classes for notices */
.notice {
  background: var(--accent-bg);
  border: 2px solid var(--border);
  border-radius: var(--standard-border-radius);
  padding: 1.5rem;
  margin: 2rem 0;
}

/* Print */
@media print {
  @page {
    margin: 1cm;
  }
  body {
    display: block;
  }
  body > header {
    background-color: unset;
  }
  body > header nav,
  body > footer {
    display: none;
  }
  article {
    border: none;
    padding: 0;
  }
  a[href^="http"]::after {
    content: " <" attr(href) ">";
  }
  abbr[title]:after {
    content: " (" attr(title) ")";
  }
  a {
    text-decoration: none;
  }
  p {
    widows: 3;
    orphans: 3;
  }
  hr {
    border-top: 1px solid var(--border);
  }
  mark {
    border: 1px solid var(--border);
  }
  pre,
  table,
  figure,
  img,
  svg {
    break-inside: avoid;
  }
  pre code {
    white-space: pre-wrap;
  }
}
